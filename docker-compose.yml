version: "3.8"

services:
  postgres:
    image: postgis/postgis:15-3.4
    env_file:
      - .env
    environment:
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5433:5432"    # host:container (use 5433 on host to avoid collisions)
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $PG_USER -d $PG_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    env_file:
      - .env
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # MinIO API
      - "9001:9001" # MinIO Console
    volumes:
      - miniodata:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:9000/minio/health/live || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmindata:/var/lib/pgadmin
    restart: unless-stopped

  ingester:
    build:
      context: .
      dockerfile: docker/ingester.Dockerfile
    image: argo-ingester:latest
    container_name: nc_ingester
    working_dir: /app
    env_file:
      - .env
    volumes:
      - ./:/app          # mount project for live code edits
    depends_on:
      - postgres
      - minio
    restart: "no"
    command: ["bash", "-lc", "tail -f /dev/null"]

volumes:
  pgdata:
  miniodata:
  pgadmindata:
